{"version":3,"sources":["components/HomeComponent.js","adzuna/AdzunaAPIService.js","services/JobService.js","services/WishListService.js","components/JobRowComponent.js","components/JobTableComponent.js","components/NoResultFoundComponent.js","components/JobCardComponent.js","components/JobGridComponent.js","containers/JobListContainer.js","services/ProfileService.js","components/ReviewRowComponent.js","components/ReviewListComponet.js","services/ReviewService.js","containers/ReviewListContainer.js","components/JobDetailComponent.js","components/WikiComponent.js","components/LoginComponent.js","components/RegisterComponent.js","components/ProfileComponent.js","components/Jobigger.js","App.js","serviceWorker.js","reducers/ReviewReducer.js","index.js"],"names":["HomeComponent","props","state","keyword","role","username","loggedIn","fetch","method","credentials","then","response","json","catch","e","setState","user","className","id","value","this","onChange","event","target","type","placeholder","to","React","Component","AdzunaAPIService","url","app_id","app_key","searchJobs","page","myInstance","createJob","job","body","JSON","stringify","headers","findJobById","jid","addToWishList","JobRowComponent","jobId","jobName","title","replace","company","display_name","location","onClick","ok","JobTableComponent","jobs","length","setLayout","map","key","NoResultFoundComponent","JobCardComponent","src","alt","JobGridComponent","JobListContainer","layout","match","params","newCourseTitle","count","getSearchResult","word","search","split","pop","service","getInstance","results","history","push","prevProps","prevState","snapshot","path","ReviewRowComponent","editing","text","review","currentUser","deleteReviewById","reviewId","updateReview","ReviewListComponent","equal","a","b","i","rid","deleteReview","status","reviews","filter","r","newReview","findReviewForJob","createReview","ReviewListContainer","connect","ownProps","ReviewReducer","dispatch","reviewsForJob","actualReviews","findReviewByUsername","JobDetailComponent","category","description","salary_min","salary_max","contract_time","label","created","WikiComponent","href","LoginComponent","login","password","loginStatus","align","RegisterComponent","error","register","ProfileComponent","profileUser","email","dob","currentTab","wishList","isLookingForOtherProfile","findProfileByCurrentUser","console","log","window","reload","findProfileByUsername","update","logout","undefined","readOnly","Date","disabled","j","Jobigger","exact","component","App","Boolean","hostname","initialState","action","updatedReview","_id","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aed56c26.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default class HomeComponent\n    extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            keyword: '',\n            role: 'VISITOR',\n            username: '',\n            loggedIn: false\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://cs4550-20su1-team2-jobigger.herokuapp.com/api/profile\", {\n            method: 'GET',\n            credentials: \"include\"\n        })\n            .then(response => response.json())\n            .catch(e => this.setState({role: 'visitor'}))\n\n\n            // .then(response => response.json())\n            //     .catch(e => {\n            //       console.log(e)\n            //         // this.props.history.push(\"/\")\n            //     })\n\n            .then(user => {\n                // console.log(user)\n                if (user) {\n                    this.setState({\n                                      role: user.role,\n                                      username: user.username,\n                                      loggedIn: true\n                                  })\n                }\n            })\n    }\n\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if (prevState!==this.state){\n    //         console.log('update')\n    //     }\n    // }\n\n    render() {\n        // console.log(this.state.role)\n        return (\n            <div className=\"form-group\">\n                <div className=\"form-group\">\n                    <div className=\"row\" id='cover'>\n                        <form>\n                            <div className='tb'>\n                                <div className='td'>\n                                    <input value={this.state.keyword}\n                                           onChange={(event) =>\n                                               this.setState({keyword: event.target.value})}\n                                           type=\"text\"\n                                           placeholder=\"Search\"\n                                           className='none-outline searchInput'/>\n                                </div>\n                                <div className='td' id='s-cover'>\n\n                                    <Link\n                                        to={`/table/jobs?keyword=${this.state.keyword}`}>\n                                        <button\n                                            className='searchBtn none-outline' type=\"submit\">\n                                            <div id='s-circle'/>\n                                            <span className='searchSpan'/>\n                                        </button>\n                                    </Link>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"row float-right \">\n                        <Link to='/PROTOTYPE'\n                              className=\"home-link pr-5\">\n                            WIKI\n                        </Link>\n\n                        {\n                            !this.state.loggedIn &&\n\n                            <Link to={`/login`}\n                                  className=\"home-link pr-5\">\n                                Sign In\n                            </Link>\n                        }\n                        {!this.state.loggedIn &&\n                         <Link to={`/register`}\n                               className=\"home-link pr-5\">\n                             Sign Up\n                         </Link>\n                        }\n                        {this.state.loggedIn &&\n                         <Link to={`/profile`}\n                               className=\"home-link pr-5\">\n                             {`Signed in as ${this.state.username}`}\n                         </Link>\n                        }\n\n                        {/*{this.state.role === 'ADMIN' &&*/}\n                        {/* <Link to={\"/users\"}*/}\n                        {/*       className=\"home-link\"> Users</Link>*/}\n                        {/*}*/}\n                    </div>\n                </div>\n            </div>);\n\n    }\n}\n","export default class AdzunaAPIService {\n    static myInstance = null;\n    url = \"https://api.adzuna.com/v1/api/jobs/gb/search/\";\n    app_id = 28179437;\n    app_key = \"f9dea5dad6f8a1a0f33d402572c8d3b1\";\n\n    static getInstance() {\n        if (AdzunaAPIService.myInstance == null) {\n            AdzunaAPIService.myInstance =\n                new AdzunaAPIService();\n        }\n        return this.myInstance;\n    }\n\n\n    searchJobs = (keyword, page = 1) => {\n        return fetch(`${this.url\n            + page}?app_id=${this.app_id}&app_key=${this.app_key}&what=${keyword}&content-type=application/json`)\n            .then(response => response.json())\n    }\n\n\n}\n","export const createJob = (job) => {\n    return fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/jobs`,\n          {\n              method: 'POST',\n              body: JSON.stringify(job),\n              headers: {\n                  'content-type': 'application/json'\n              }\n          }).then(response => response.json());\n}\n\nexport const findJobById = (jid)=>\n  {\n      return fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/jobs/${jid}`)\n          .then(response => response.json()).catch(e=>{});}","import {createJob} from \"./JobService\"\n\nexport const addToWishList = (jid, username) =>\n    fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/${username}/wishlist/${jid}`,\n          {\n              method: 'POST',\n              headers: {\n                  'content-type': 'application/json'\n              }\n          }).then(response => response.json()).catch(e => {\n        createJob(jid)\n        return addToWishList(jid, username)\n    });\n\nexport const removeFromWishList = (jid, username) =>\n    fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/${username}/wishlist/${jid}`,\n          {\n              method: 'DELETE',\n              headers: {\n                  'content-type': 'application/json'\n              }\n          }).then(response => response.json());\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {createJob, findJobById} from \"../services/JobService\"\n\nimport {addToWishList} from \"../services/WishListService\"\n\nexport default class JobRowComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            job: this.props.job,\n        }\n    }\n\n    addToWishList = () => {\n        if (findJobById(this.state.job.id)) {\n            // console.log('create')\n            return createJob({jobId: this.props.job.id, jobName: this.props.job.title})\n                .then(() => addToWishList(this.state.job.id, this.props.username))\n\n        } else {\n            return addToWishList(this.state.job.id, this.props.username)\n        }\n\n    }\n\n    render() {\n\n        // console.log(this.props.type)\n        // console.log(this)\n        return (\n            <tr>\n                <td>{this.state.job.title.replace(/(<([^>]+)>)/ig, '')}</td>\n                <td className=\"d-none d-sm-table-cell\">{this.state.job.company.display_name}</td>\n                <td className=\"d-none d-md-table-cell\">{this.state.job.location.display_name}</td>\n                <td>\n                    <Link to={`/detail/${this.state.job.id}`}>\n                        <button className=\"btn btn-primary\"\n                                onClick={this.ok}>\n                            <i className=\"fa fa-angle-double-right\"/>\n                        </button>\n                    </Link>\n                    {this.props.type === 'JOB_SEEKER' &&\n                     <button className=\"btn btn-danger\"\n                             onClick={() => this.addToWishList()}>\n\n                         <i className=\"fa fa-heart\"/>\n                     </button>}\n                </td>\n            </tr>\n        )\n    }\n}","import React from \"react\";\nimport JobRowComponent from './JobRowComponent';\n\nexport default class JobTableComponent\n    extends React.Component {\n\n    render() {\n        return (\n            <div>\n                {this.props.jobs.length !== 0 &&\n                 <table className=\"table table-striped\">\n                     <thead>\n                     <tr>\n                         <th>Title</th>\n                         <th className=\"d-none d-sm-table-cell\">\n                             Company\n                         </th>\n                         <th className=\"d-none d-md-table-cell\">\n                             Location\n                         </th>\n                         <th>\n                             <div className=\"btn-group\">\n                                 <button className=\"btn\"\n                                         onClick={() => this.props.setLayout('grid')}>\n                                     <i className=\"fa fa-th pr-2\"/>\n                                 </button>\n                                 <button className=\"btn\">\n                                     <i className=\"fa fa-sort\"/>\n                                 </button>\n                             </div>\n                         </th>\n                     </tr>\n                     </thead>\n                     <tbody>\n\n                     {\n                         this.props.jobs.map(job => <JobRowComponent job={job} key={job.id}\n                                                                     type={this.props.type}\n                                                                     username={this.props.username}/>)\n                     }\n\n                     </tbody>\n                 </table>\n                }\n            </div>\n        )\n\n    }\n}\n","import React from \"react\";\n\nconst NoResultFoundComponent = () =>\n    <div>\n        <h2>Sorry, your search did not match any documents.</h2>\n    </div>;\n\nexport default NoResultFoundComponent;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {createJob, findJobById} from \"../services/JobService\";\nimport {addToWishList} from \"../services/WishListService\"\n\nexport default class JobCardComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            job: this.props.job\n        }\n    }\n\n    addToWishList = () => {\n        if (findJobById(this.state.job.id)) {\n            // console.log('create')\n            return createJob({jobId: this.props.job.id, jobName: this.props.job.title})\n                .then(() => addToWishList(this.state.job.id, this.props.username))\n\n        } else {\n            return addToWishList(this.state.job.id, this.props.username)\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"col mb-4\">\n                <div>\n                    <img\n                        src=\"https://cdn.pixabay.com/photo/2014/11/18/20/27/elections-536656_1280.png\"\n                        className=\"card-img-top\"\n                        alt={this.state.job.title}/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">\n                            <Link to={`/detail/${this.state.job.id}`}>\n                                {this.state.job.title.replace(/(<([^>]+)>)/ig, '')}\n                            </Link>\n                        </h5>\n                        <p className=\"card-text\">\n                            <small className=\"text-muted\">\n                                {this.state.job.company.display_name}\n                            </small>\n                        </p>\n                        <p>\n                            <small className=\"text-muted\">\n                                {this.state.job.location.display_name}\n                            </small>\n                        </p>\n\n                        {this.props.type === 'JOB_SEEKER' &&\n                         <button className=\"btn btn-danger\"\n                                 onClick={() => this.addToWishList()}>\n\n                             <i className=\"fa fa-heart\"/>\n                         </button>}\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport JobCardComponent from \"./JobCardComponent\";\n\nexport default class JobGridComponent\n    extends React.Component {\n\n    render() {\n        return (<div>\n                {this.props.jobs.length !== 0 &&\n                 <div>\n                     <table className=\"table table-striped\">\n                         <thead>\n                         <tr>\n                             <th>Title</th>\n                             <th className=\"d-none d-sm-table-cell\">\n                                 Company\n                             </th>\n                             <th className=\"d-none d-md-table-cell\">\n                                 Location\n                             </th>\n                             <th>\n                                 <div className=\"btn-group\">\n                                     <button className=\"btn\"\n                                             onClick={() => this.props.setLayout('table')}>\n                                         <i className=\"fa fa-th pr-2\"/>\n                                     </button>\n                                     <button className=\"btn\">\n                                         <i className=\"fa fa-sort\"/>\n                                     </button>\n                                 </div>\n                             </th>\n                         </tr>\n                         </thead>\n                     </table>\n                     <div\n                         className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-6\">\n                         {\n                             this.props.jobs.map(job => <JobCardComponent job={job} key={job.id}\n                                                                          type={this.props.type}\n                                                                          username={this.props.username}/>)\n                         }\n\n                     </div>\n                 </div>\n                }\n            </div>\n\n        )\n    }\n}","import React from \"react\";\nimport service from \"../adzuna/AdzunaAPIService\";\nimport JobTableComponent from \"../components/JobTableComponent\";\nimport NoResultFoundComponent from \"../components/NoResultFoundComponent\";\nimport JobGridComponent from \"../components/JobGridComponent\";\nimport {Link} from \"react-router-dom\";\n\nexport default class JobListContainer\n    extends React.Component {\n    state = {\n        layout: this.props.match.params.layout,\n        page: 1,\n        jobs: [],\n        newCourseTitle: 'New Title',\n        count: 1,\n        type: 'visitor',\n        username: ''\n    };\n\n    componentDidMount() {\n        this.getSearchResult();\n        fetch(\"https://cs4550-20su1-team2-jobigger.herokuapp.com/api/profile\", {\n            method: 'GET',\n            credentials: \"include\"\n        })\n            .then(response => {\n                // if (response.ok === false) {\n                //     this.props.history.push(\"/\")\n                // } else {\n                    return response.json()\n                // }\n            }).catch(e=>{})\n            .then(user => {\n            // console.log(user)\n            if (user) {\n                this.setState({\n                                  type: user.role,\n                                  username: user.username\n                              })\n            }\n        })\n    };\n\n    getSearchResult = () => {\n        const query = this.props.location.search;\n        const word = query.split('=').pop();\n        service.getInstance().searchJobs(word, this.state.page)\n            .then(json => this.setState({\n                                            jobs: json.results,\n                                            count: json.count\n                                        }));\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.params.layout !== this.props.match.params.layout) {\n            this.setState({\n                              layout: this.props.match.params.layout\n                          })\n        } else if (prevState.page !== this.state.page) {\n            this.getSearchResult();\n        }\n    };\n\n    setLayout = (layout) => {\n        this.props.history.push(`/${layout}/jobs${this.props.location.search}`)\n    };\n\n    // deleteCourse = (courseToDelete) =>\n    //     courseService.deleteCourse(courseToDelete._id)\n    //         .then(status => this.setState(prevState => ({\n    //             courses: prevState\n    //                 .courses.filter(course => course !== courseToDelete)\n    //         })));\n\n    // addCourse = (title) =>\n    //     courseService.createCourse({\n    //                                    title: title,\n    //                                    owner: 'me',\n    //                                    modified: (new Date()).toDateString()\n    //                                })\n    //         .then(theActualNewCourse =>\n    //                   this.setState((prevState) => {\n    //                       return {\n    //                           courses: [\n    //                               ...prevState.courses,\n    //                               theActualNewCourse\n    //                           ]\n    //                       }\n    //                   }));\n\n    render() {\n        // console.log(this.props)\n        return (\n            <div>\n                {\n                    this.state.count === 0 && <NoResultFoundComponent/>\n                }\n                {\n                    this.state.layout === 'table' &&\n                    <JobTableComponent jobs={this.state.jobs}\n                                       type={this.state.type}\n                                       setLayout={this.setLayout}\n                                       username={this.state.username}/>\n                }\n                {\n                    this.state.layout === 'grid' &&\n                    <JobGridComponent jobs={this.state.jobs}\n                                      type={this.state.type}\n                                      setLayout={this.setLayout}\n                                      username={this.state.username}/>\n                }\n\n                {this.state.count !== 0 &&\n                 <div>\n                     <div>Current: {this.state.page}</div>\n                     {\n                         this.state.page !== 1 &&\n                         <button className='btn btn-success'\n                                 onClick={() => this.setState(\n                                     {\n                                         page: this.state.page === 1 ? this.state.page\n                                                                     : this.state.page - 1\n                                     })}>\n                             Previous Page\n                         </button>\n                     }\n                     {\n                         (this.state.count - (this.state.page * 10)) >= 10 &&\n                         < button className='btn btn-success'\n                                  onClick={() => this.setState({page: this.state.page + 1})}>\n                             Next Page\n                         </button>\n                     }\n                 </div>\n                }\n                <Link className='btn btn-primary'\n                       to={`/`}>\n                    Back\n                </Link>\n            </div>\n        );\n    }\n}","const path = 'https://cs4550-20su1-team2-jobigger.herokuapp.com';\n\nexport const getCurrentUser = () => {\n    return fetch(`${path}/api/profile`, {\n        method: 'POST',\n        credentials: \"include\"\n    }).then(response => response.json())\n};\n\nexport const findProfileByUsername = (username) => {\n    return fetch(`${path}/api/profile/${username}`).then(response => response.json())\n};\n\nexport const updateProfile = (newProfile) => {\n    return fetch(`${path}/api/profile`, {\n        body: JSON.stringify(newProfile),\n        headers: {\n            'content-type': 'application/json'\n        },\n        method: 'PUT',\n        credentials: \"include\"\n    })\n        .then(response => response.json())\n};\n\nexport const logout = () => {\n    return fetch(`${path}/api/logout`, {\n        method: 'POST',\n        credentials: \"include\"\n    })\n\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class ReviewRowComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false,\n            text: this.props.review.text\n        }\n    }\n\n    render() {\n        // console.log(this.props.role)\n        return (<div className=\"pl-area pl-show-box\">\n            <div className=\"pl-area-userpic\">\n                <img className=\"pl-userpic\"\n                     src=\"https://ae01.alicdn.com/kf/H596671506b9243b7abf3d7c95edda908B.png\"\n                     alt={'review'}/>\n            </div>\n            <div className=\"pl-area-post\">\n                <div className=\"pl-show-title\">\n                    <Link className={'review-username'}\n                          to={`/profile/${this.props.review.username}`}>\n                        {this.props.review.username}\n                    </Link>\n                </div>\n                {!this.state.editing && <div className=\"pl-show-saytext\">\n                    {this.props.review.text}\n                </div>}\n                {this.state.editing && <textarea value={this.state.text}\n                                                 onChange={(e) => this.setState(\n                                                     {text: e.target.value})}\n                                                 className={'form-control'}/>}\n\n                <div className=\"pl-show-tools\">\n                    {(this.props.role === 'ADMIN' ||\n                      this.props.review.username === this.props.currentUser) &&\n                     <span>\n                    {!this.state.editing &&\n                     <span>\n                        <button className='btn'\n                                onClick={() => this.setState({editing: true})}>\n                        <i className=\"fa fa-pencil\"/>\n                        <span/>\n                        </button>\n                        <button className='btn'\n                                onClick={() => this.props.deleteReviewById(\n                                    this.props.review.reviewId)}>\n                        <i className=\"fa fa-trash\"/>\n                        <span/>\n                        </button>\n                        </span>}\n\n\n                         {this.state.editing &&\n\n                          <button className='btn'\n                                  onClick={() => {\n                                      this.props.updateReview(this.props.review.reviewId, {\n                                          reviewId: this.props.review.reviewId,\n                                          text: this.state.text,\n                                          jobId: this.props.review.jobId,\n                                          username: this.props.review.username\n                                      }).then(() => this.setState({editing: false}))\n                                  }}>\n                              <i className=\"fa fa-check\"/>\n                              <span/>\n                          </button>\n                         }\n                </span>\n                    }\n                    <a className=\"pl-reply\">Reply</a>\n                </div>\n            </div>\n            <div className=\"pl-clr\"/>\n        </div>)\n\n    }\n}","import React from 'react';\nimport {getCurrentUser} from \"../services/ProfileService\"\nimport ReviewRowComponent from \"./ReviewRowComponent\";\nimport {deleteReview, updateReview} from \"../services/ReviewService\";\nimport {Link} from \"react-router-dom\";\n\nexport default class ReviewListComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false,\n            username: '',\n            text: '',\n            role: 'VISITOR',\n            reviews: []\n        }\n    }\n\n    componentDidMount() {\n        getCurrentUser().then((user) => {\n            if (user) {\n                this.setState({\n                                  username: user.username,\n                                  role: user.role\n                              })\n            } else {\n                this.props.history.push(\"/\")\n            }\n        });\n        this.props.findReviewForJob(this.props.params.id)\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.reviews !== prevState.reviews) {\n            this.props.findReviewForJob(this.props.params.id)\n        }\n\n    }\n\n    equal = (a, b) => {\n\n        if (a.length !== b.length) {\n            return false\n        } else {\n            for (let i = 0; i < a.length; i++) {\n                if (a[i] !== b[i]) {\n                    return false;\n                }\n\n            }\n            return true;\n        }\n    }\n\n    deleteReviewById = (rid) =>\n        deleteReview(rid)\n            .then(status => this.setState(prevState => ({\n                reviews: prevState\n                    .reviews.filter(\n                        r => r.reviewId !== rid)\n            })))\n\n    updateReview = (rid, review) =>\n        updateReview(rid, review).then(status => this.setState(prevState => ({\n            reviews: prevState\n                .reviews.map(\n                    r => r.reviewId === rid ? review : r)\n        })))\n\n    render() {\n        // console.log(this.props.reviews)\n        // console.log(this.props)\n        return (<div>\n                <div>\n                    <h2>REVIEWS</h2>\n                    {this.state.role === 'VISITOR' &&\n                     <Link to={`/login`}\n                           className=\"btn btn-warning btn-lg\">\n                         Login To Write Review\n                     </Link>\n                    }\n                    {this.state.role !== 'VISITOR' &&\n                     <button className=\"btn btn-warning btn-lg\"\n                             onClick={() =>\n                                 this.setState({editing: !this.state.editing})}>\n                         Write Review\n                     </button>}\n\n                    {this.state.editing &&\n                     <div className=\"pl-area\">\n                         <div className=\"pl-area-userpic\">\n                             <img className=\"pl-userpic\"\n                                  src=\"https://ae01.alicdn.com/kf/H596671506b9243b7abf3d7c95edda908B.png\"\n                                  alt={'review'}/>\n                         </div>\n                         <div className=\"pl-area-post\">\n                             <div className=\"pl-post\">\n                                 <div className=\"pl-textarea\">\n                                    <textarea className=\"pl-post-word\"\n                                              placeholder=\"Write your review!! \"\n                                              value={this.state.text}\n                                              onChange={(e) => this.setState(\n                                                  {text: e.target.value})}/>\n                                 </div>\n                                 <div className=\"pl-tools\">\n                                     <ul>\n                                         <li>\n                                             <span className=\"pl-icon icon-face\"/>\n                                         </li>\n                                         <li>\n                                             <span className=\"pl-icon icon-img\"/>\n                                         </li>\n                                         <li className=\"pl-tools-lastchild\">\n                                             <button className=\"pl-submit-btn\"\n                                                     id=\"pl-submit-btn-main\"\n                                                     onClick={() => {\n                                                         this.props.createReview(\n                                                             this.props.params.id,\n                                                             this.state.username, {\n                                                                 jobId: this.props.params.id,\n                                                                 username: this.state.username,\n                                                                 text: this.state.text\n                                                             });\n                                                         this.setState(\n                                                             {\n                                                                 reviews: [...this.state.reviews,\n                                                                     {\n                                                                         jobId: this.props.params.id,\n                                                                         username: this.state.username,\n                                                                         text: this.state.text\n                                                                     }],\n                                                                 editing: false,\n                                                                 text: ''\n                                                             })\n                                                     }}>\n                                                 Submit\n                                             </button>\n                                         </li>\n                                     </ul>\n                                 </div>\n                             </div>\n                         </div>\n                     </div>\n                    }\n\n                    <div className=\"pl-clr\" id=\"pl-start\"/>\n                    <div className=\"pl-title\">New Review</div>\n                    {this.props.reviews.map(\n                        review => <ReviewRowComponent review={review}\n                                                      key={`review${review.reviewId}`}\n                                                      currentUser={this.state.username}\n                                                      role={this.state.role}\n                                                      deleteReviewById={this.deleteReviewById}\n                                                      updateReview={this.updateReview}/>)}\n                </div>\n            </div>\n        )\n    }\n}\n","export const findReviewsForJob = (jid) =>\n    fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/jobs/${jid}/reviews`)\n        .then(response => response.json());\n\nexport const findReviewByUsername = (username) =>\n    fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/profiles/${username}/reviews`)\n        .then(response => response.json());\n\nexport const createReview = (jid, username, review) =>\n    fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/jobs/${jid}/reviews/${username}`,\n          {\n              method: 'POST',\n              headers: {\n                  'content-type': 'application/json'\n              },\n              body: JSON.stringify(review)\n          }\n    ).then(response => response.json());\n\nexport const deleteReview = (rid) =>\n    fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/reviews/${rid}`,\n          {\n              method: 'DELETE',\n              headers: {\n                  'content-type': 'application/json'\n              }\n\n          }).then(response => response.json());\n\nexport const updateReview = (rid, newReview) =>\n    fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/reviews/${rid}`,\n          {\n              method: 'PUT',\n              headers: {\n                  'content-type': 'application/json'\n              },\n              body: JSON.stringify(newReview)\n\n          }).then(response => response.json());\n","import {connect} from \"react-redux\";\nimport {findReviewsForJob, findReviewByUsername, createReview} from \"../services/ReviewService\";\nimport ReviewListComponent from \"../components/ReviewListComponet\";\n\n// +----------+-----------------------------------------------------+--+\n// |   Role   |                         View                        |  |\n// +----------+-----------------------------------------------------+--+\n// | Admin    | Can see and edit all review                         |  |\n// | Visitor  | read-only                                           |  |\n// | Employee | Can see all review, only edit review by themselves  |  |\n// +----------+-----------------------------------------------------+--+\n\nconst stateToPropertyMapper = (state, ownProps) => ({\n    reviews: state.ReviewReducer.reviews\n})\n\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        findReviewForJob: (jobId) => {\n            findReviewsForJob(jobId)\n                .then(reviewsForJob => dispatch({\n                                                    type: 'FIND_REVIEWS_FOR_JOB',\n                                                    actualReviews: reviewsForJob\n                                                }))\n        },\n        findReviewByUsername: (username) => {\n            findReviewByUsername(username)\n                .then(reviewsForJob => dispatch({\n                                                    type: 'FIND_REVIEW_BY_USERNAME',\n                                                    actualReviews: reviewsForJob\n                                                }))\n        },\n        createReview: (jid, username, review) => {\n            createReview(jid, username, review)\n                .then(newReview => dispatch({\n                                                    type: 'CREATE_REVIEW',\n                                                    newReview: newReview\n                                                }))\n        }\n    }\n}\nconst ReviewListContainer = connect\n(stateToPropertyMapper, dispatchToPropertyMapper)\n(ReviewListComponent);\nexport default ReviewListContainer;","import React from \"react\";\nimport service from \"../adzuna/AdzunaAPIService\";\nimport ReviewListContainer from \"../containers/ReviewListContainer\";\nimport {Link} from \"react-router-dom\";\n\nexport default class JobDetailComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            job: {},\n            location: {},\n            category: {},\n            company: {},\n        }\n    }\n\n    componentDidMount() {\n        service.getInstance().searchJobs(this.props.match.params.id)\n            .then(json => this.setState({job: json.results[0]}))\n            .then(() => this.setState({location: this.state.job[\"location\"]}))\n            .then(() => this.setState({category: this.state.job[\"category\"]}))\n            .then(() => this.setState({company: this.state.job[\"company\"]}))\n    }\n\n    render() {\n        // console.log(this.props)\n        // console.log(this.state.currentReview)\n        // console.log(com_name)\n        // console.log(self.state.job.location.display_name)\n        // console.log(com_name['display_name'])\n        return (\n            <div className={'job-detail'}>\n                <div className=\"jumbotron px-5\">\n                    <h1 className=\"display-4\">\n                        {this.state.job.title}\n                    </h1>\n                    <h2 className=\"lead form-group row\">\n                        <span className=\"col-sm-6\">\n                            <i className=\"fa fa-building pr-3\"/>\n                            {this.state.company.display_name}\n                        </span>\n                        <span className=\"col-sm-6\">\n                            <i className=\"fa fa-map-marker pr-3\"/>\n                            {this.state.location.display_name}\n                            {/* {console.log(this.state.location.display_name)} */}\n                            {/* {console.log(this.state.job)} */}\n                        </span>\n                    </h2>\n                    <Link className='btn btn-primary'\n                          to={`/`}>\n                        Back To Search\n                    </Link>\n                </div>\n\n\n                <div className=\"form-group row px-5\">\n                    <span className=\"col-sm-4\">Title</span>\n                    <span className=\"col-sm-8\">\n                        {this.state.job.title}\n                        </span>\n                </div>\n                <div className=\"form-group row px-5\">\n                    <span className=\"col-sm-4\">Description</span>\n                    <span className=\"col-sm-8\">\n                        {this.state.job.description}\n                        </span>\n                </div>\n                <div className=\"form-group row px-5\">\n                    <span className=\"col-sm-4\">Salary</span>\n                    <span className=\"col-sm-8\">\n                        {this.state.job.salary_min}{this.state.job.salary_max}\n                    </span>\n                </div>\n                <div className=\"form-group row px-5\">\n                    <span className=\"col-sm-4\">Contract time</span>\n                    <span className=\"col-sm-8\">\n                        {this.state.job.contract_time}\n                    </span>\n                </div>\n                <div className=\"form-group row px-5\">\n                    <span className=\"col-sm-4\">Category</span>\n                    <span className=\"col-sm-8\">\n                        {this.state.category.label}\n                    </span>\n                </div>\n                <div className=\"form-group row px-5\">\n                    <span className=\"col-sm-4\">Created by</span>\n                    <span className=\"col-sm-8\">\n                        {this.state.job.created}\n                    </span>\n                </div>\n                <div className=\"form-group row px-5\">\n                    <span className=\"col-sm-4\">ID</span>\n                    <span className=\"col-sm-8\">\n                        {this.state.job.id}\n                    </span>\n                </div>\n\n\n                <ReviewListContainer {...this.props.match}/>\n\n\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default class WikiComponent\n    extends React.Component {\n\n    state = {\n        job: {\n            \"salary_is_predicted\": \"1\",\n            \"description\": \" Bike Courier   Get a taste of freedom on the road with the UK's largest food delivery network.   Become a self-employed Bike Courier and discover a feast of flexible opportunities at Just Eat.   Whether you're a student trying to make some extra cash, or have a bicycle and are looking to get on the road, this is a great opportunity for you to boost your income (and work on your calf muscles too). You can work weekdays or weekends, daytime or evenings, a full schedule or bits here and there - t\\u2026\",\n            \"adref\": \"eyJhbGciOiJIUzI1NiJ9.eyJzIjoiWEVFa29pS2g2aEdrYXV3VDM3TV9UZyIsImkiOiIxMTk5MDc5NTcxIn0.qg_tl0DG11d-Ymuled_TqKFurrUcpbpAZ96HI3xcf_E\",\n            \"salary_min\": 24565.21,\n            \"latitude\": 51.270302,\n            \"location\":\n                {\n                    \"__CLASS__\":\n                        \"Adzuna::API::Response::Location\",\n                    \"display_name\":\n                        \"Maidstone, Kent\",\n                    \"area\":\n                        [\"UK\", \"South East England\", \"Kent\", \"Maidstone\"]\n                }\n            ,\n            \"salary_max\":\n                24565.21,\n            \"__CLASS__\":\n                \"Adzuna::API::Response::Job\",\n            \"company\":\n                {\n                    \"display_name\": \"Just Eat\",\n                    \"__CLASS__\": \"Adzuna::API::Response::Company\"\n                }\n            ,\n            \"title\":\n                \"Bike Courier\",\n            \"contract_type\":\n                \"contract\",\n            \"id\":\n                \"1199079571\",\n            \"contract_time\":\n                \"part_time\",\n            \"longitude\":\n                0.523841,\n            \"redirect_url\":\n                \"https://www.adzuna.co.uk/jobs/land/ad/1199079571?se=XEEkoiKh6hGkauwT37M_Tg&utm_medium=api&utm_source=28179437&v=F064F35DBF936B6FE6D9EE7FB01F4EC8C3C9EAC1\",\n            \"created\":\n                \"2019-07-04T10:36:07Z\",\n            \"category\":\n                {\n                    \"__CLASS__\":\n                        \"Adzuna::API::Response::Category\", \"tag\":\n                        \"other-general-jobs\", \"label\":\n                        \"Other/General Jobs\"\n                }\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>wiki</h1>\n                <Link to={'/'}>Back</Link>\n                <ul>\n                    <li>\n                        <a href=\"https://developer.adzuna.com/docs/search\">Azuna</a>\n                        <ul>\n                            <li>job search api based on job keyword and location</li>\n                        </ul>\n                    </li>\n                    <li>Search criteria\n                        <ul>\n                            <li>for now just type keyword for desired job position</li>\n                            <li>the keyword also supports the location when it is provided in\n                                searchbar\n                            </li>\n                        </ul>\n                    </li>\n                    <li>example query:\n                        <ul>\n                            <li>\n                                <p>keyword: software</p>\n                                <ul>\n                                    <li>would query jobs on software and json containes raw data,\n                                        then it is parsed\n                                    </li>\n                                </ul>\n\n                                <ul>\n                                    <li>keyword: England, a subset of a returned json would be\n                                        \"area\": [\n                                        \"UK\",\n                                        \"North East England\"\n                                        ]\n                                    </li>\n                                </ul>\n\n                                <ul>\n                                    <li>the summary result would be a list of brief information:\n                                        company, title, and location\n                                    </li>\n                                    <li>the detailed page would provide additional information like\n                                        salary, description with url of /_id\n                                        example: <Link to='/detail/1533798912'>Example Detailed\n                                            page</Link>\n                                    </li>\n                                    <li> One example here is the keyword search for software to make\n                                        a brief joblist is:\n                                        <Link to='/table/jobs?keyword=software'>Example Job\n                                            list</Link>\n                                    </li>\n\n                                    <li>a detailed page example would rendered as following</li>\n                                    <div>\n                                        <div className=\"jumbotron\">\n                                            <h1 className=\"display-4\">\n                                                {this.state.job.title}\n                                            </h1>\n                                            <h2 className=\"lead form-group row\">\n                                                <span className=\"col-sm-6\">\n                                                    <i className=\"fa fa-building pr-3\"/>\n                                                    {this.state.job.company.display_name}\n                                                </span>\n                                                <span className=\"col-sm-6\">\n                                                    <i className=\"fa fa-map-marker pr-3\"/>\n                                                    {this.state.job.location.display_name}\n                                                </span>\n                                            </h2>\n                                            <p>It uses utility classes for typography and spacing to\n                                                space content out\n                                                within the larger container.</p>\n                                            <a className=\"btn btn-primary btn-lg\" href=\"#\"\n                                               role=\"button\">Learn more</a>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <span className=\"col-sm-4\">Title</span>\n                                            <span className=\"col-sm-8\">\n                                                {this.state.job.title}\n                                            </span>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <span className=\"col-sm-4\">Description</span>\n                                            <span className=\"col-sm-8\">\n                                                {this.state.job.description}\n                                            </span>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <span className=\"col-sm-4\">Salary</span>\n                                            <span className=\"col-sm-8\">\n                                                {this.state.job.salary_min}{this.state.job.salary_max}\n                                            </span>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <span className=\"col-sm-4\">Contract time</span>\n                                            <span className=\"col-sm-8\">\n                                                {this.state.job.contract_time}\n                                            </span>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <span className=\"col-sm-4\">Category</span>\n                                            <span className=\"col-sm-8\">\n                                                {this.state.job.category.label}\n                                            </span>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <span className=\"col-sm-4\">Created by</span>\n                                            <span className=\"col-sm-8\">\n                                                {this.state.job.created}\n                                            </span>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <span className=\"col-sm-4\">ID</span>\n                                            <span className=\"col-sm-8\">\n                                                {this.state.job.id}\n                                            </span>\n                                        </div>\n                                    </div>\n\n                                </ul>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n\n\n            </div>\n        )\n    }\n\n}\n\n\n\n\n\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class LoginComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            loginStatus: false\n        }\n    }\n\n    // login = () => {\n    //     fetch(\"http://localhost:8080/api/login\", {\n    //         body: JSON.stringify({\n    //                                  username: this.state.username,\n    //                                  password: this.state.password}),\n    //         headers: {\n    //             'content-type': 'application/json'\n    //         },\n    //         method: 'POST',\n    //         credentials: \"include\"\n    //     }).then(response => response.json())\n    //         .catch(e => {\n    //             console.log('aesf')\n    //             this.props.history.push(\"/login\")\n    //         })\n    //         .then(currentUser => {\n    //             if(currentUser)\n    //                 this.props.history.push(\"/profile\")\n    //         })\n    //\n    // }\n    // login = () => {\n    //\n    //     fetch('http://localhost:8080/api/login',\n    //           {\n    //               body: JSON.stringify({\n    //                                        username: this.state.username,\n    //                                        password: this.state.password\n    //                                    }),\n    //               headers: {\n    //                   'content-type': 'application/json'\n    //               },\n    //               method: 'POST',\n    //               credentials: 'include'\n    //           })\n    //         .then(response => {\n    //             if (response.ok) {\n    //                 return this.setState({loginStatus: true})\n    //             } else {\n    //                 // throw new Error(\n    //                 //     'The email or password did not match our records. Please try again. ');\n    //             }\n    //         }).then(() => {\n    //         if (this.state.loginStatus) {\n    //\n    //             this.props.history.push(\"/profile\")\n    //         } else {\n    //             alert('The email or password did not match our records. Please try again. ')\n    //         }\n    //     })\n    // };\n\n\n    login = () => {\n\n        fetch('https://cs4550-20su1-team2-jobigger.herokuapp.com/api/login',\n              {\n                  body: JSON.stringify({\n                                           username: this.state.username,\n                                           password: this.state.password\n                                       }),\n                  headers: {\n                      'content-type': 'application/json'\n                  },\n                  method: 'POST',\n                  credentials: 'include'\n              })\n            .catch(e => {\n                this.props.history.push(\"/\")\n            })\n            // .then(currentUser => {\n            //   console.log(currentUser)\n            //     if (currentUser) {\n            //         this.props.history.push(\"/profile\")\n            //     }\n            // })\n            .then(this.props.history.push(\"/profile\"))\n    };\n\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"sign\" align=\"center\">\n                    Sign in\n                </div>\n                <form className=\"form1\">\n                    <input className=\"login-input\"\n                           type=\"text\"\n                           align=\"center\"\n                           placeholder=\"Username\"\n                           value={this.state.username}\n                           onChange={(event) =>\n                               this.setState({username: event.target.value})}/>\n                    <input className=\"login-input\"\n                           type=\"password\"\n                           align=\"center\"\n                           placeholder=\"Password\"\n                           value={this.state.password}\n                           onChange={(event) =>\n                               this.setState({password: event.target.value})}/>\n                    <button className=\"submit\"\n                            onClick={this.login}>\n                        Login\n                    </button>\n                    <div className=\"forgot\" align=\"center\">\n                        <a className='login-link'\n                           href=\"#\">\n                            Forgot Password?\n                        </a>\n                    </div>\n                    <div className=\"forgot\" align=\"center\">\n                        <Link className='login-link'\n                              to={`/register`}>\n                            Register\n                        </Link>\n                    </div>\n                    {/*<Link to={`/profile`}>Profile</Link>*/}\n                </form>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class RegisterComponent extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        error: null\n    };\n\n    //TODO:创建wishlist\n    register = () => {\n        fetch(\"https://cs4550-20su1-team2-jobigger.herokuapp.com/api/register\", {\n            body: JSON.stringify({\n                                     username: this.state.username,\n                                     password: this.state.password,\n                                     role: 'JOB_SEEKER'\n                                 }),\n            headers: {\n                'content-type': 'application/json'\n            },\n            method: 'POST',\n            credentials: \"include\"\n        }).then(response => response.json())\n            // .catch(e => this.setState({\n            //                               error: 'Unable to register'\n            //                           })\n            // )\n            .then(currentUser => this.props.history.push(\"/profile\"))\n    };\n\n\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"sign\" align=\"center\">\n                    Register\n                </div>\n\n                <form className=\"form1\">\n                    {\n                        this.state.error &&\n                        <div className=\"alert alert-danger\">\n                            {this.state.error}\n                        </div>\n                    }\n                    <input className=\"login-input\"\n                           type=\"text\"\n                           align=\"center\"\n                           placeholder=\"Username\"\n                           value={this.state.username}\n                           onChange={(event) =>\n                               this.setState({username: event.target.value})}/>\n                    <input className=\"login-input\"\n                           type=\"password\"\n                           align=\"center\"\n                           placeholder=\"Password\"\n                           value={this.state.password}\n                           onChange={(event) =>\n                               this.setState({password: event.target.value})}/>\n                    <button className=\"submit\"\n                            onClick={this.register}>\n                        Sign Up\n                    </button>\n\n                    <div className=\"forgot\" align=\"center\">\n                        <Link className='login-link'\n                              to={`/login`}>\n                            Login\n                        </Link>\n                    </div>\n\n                    <div className=\"forgot\" align=\"center\">\n                        <Link className='login-link'\n                              to={`/`}>\n                            Back\n                        </Link>\n                    </div>\n                </form>\n            </div>)\n    }\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {removeFromWishList} from \"../services/WishListService\"\n\nexport default class ProfileComponent extends React.Component {\n    state = {\n        username: '',\n        profileUser: '',\n        password: '',\n        email: '',\n        dob: '',\n        type: '',\n        currentTab: 'OVERVIEW',\n        wishList: []\n    };\n\n    componentDidMount() {\n        if (this.props.match.params.username === undefined) {\n\n            this.findProfileByCurrentUser()\n        } else {\n            this.findProfileByUsername()\n        }\n    }\n\n    isLookingForOtherProfile = () => {\n        return this.state.username !== this.state.profileUser;\n    }\n\n    findProfileByCurrentUser = () => {\n        fetch(\"http://localhost:8080/api/profile\", {\n            headers: {\n                'content-type': 'application/json'\n            },\n            method: 'GET',\n            credentials: \"include\"\n        })\n            .then(response => response.json())\n            .catch(e => {\n                console.log(e)\n                // this.props.history.push(\"/\")\n            })\n\n            .then(user => {\n                // console.log(user)\n                if (user) {\n                    this.setState({\n                                      username: user.username,\n                                      profileUser: user.username,\n                                      password: user.password,\n                                      email: user.email,\n                                      dob: user.dob,\n                                      type: user.role,\n                                      wishList: user.jobs\n                                  })\n                } else {\n                    window.location.reload();\n                }\n            })\n    }\n\n    findProfileByUsername = () => {\n        fetch(\"https://cs4550-20su1-team2-jobigger.herokuapp.com/api/profile\", {\n            headers: {\n                'content-type': 'application/json'\n            },\n            method: 'GET',\n            credentials: \"include\"\n        })\n            .then(response => response.json())\n            .catch(e => {\n                console.log(e)\n                // this.props.history.push(\"/\")\n            })\n\n            .then(user => {\n                // console.log(user)\n                if (user) {\n                    this.setState({\n                                      username: user.username,\n\n                                  })\n                }\n            });\n        fetch(`https://cs4550-20su1-team2-jobigger.herokuapp.com/api/profile/${this.props.match.params.username}`, {\n            headers: {\n                'content-type': 'application/json'\n            },\n            method: 'GET',\n            credentials: \"include\"\n        })\n            .then(response => response.json())\n            // .then(e => console.log(e))\n            .then(user => {\n                // console.log(user)\n                if (user) {\n                    this.setState({\n                                      profileUser: user.username,\n                                      password: user.password,\n                                      email: user.email,\n                                      dob: user.dob,\n                                      type: user.role,\n                                      wishList: user.jobs\n                                  })\n                }\n                // else {\n                //     window.location.reload();\n                // }\n            })\n    }\n\n    update = () => {\n        fetch(\"https://cs4550-20su1-team2-jobigger.herokuapp.com/api/profile\", {\n            body: JSON.stringify({\n                                     username: this.state.username,\n                                     password: this.state.password,\n                                     email: this.state.email,\n                                     dob: this.state.dob,\n                                     role: this.state.type\n                                 }),\n            headers: {\n                'content-type': 'application/json'\n            },\n            method: 'PUT',\n            credentials: \"include\"\n        })\n            .then(response => response.json())\n            .then(user => this.setState({\n                                            username: user.username,\n                                            password: user.password,\n                                            email: user.email,\n                                            dob: user.dob,\n                                            type: user.role\n                                        }))\n    }\n\n    logout = () => {\n        fetch(\"https://cs4550-20su1-team2-jobigger.herokuapp.com/api/logout\", {\n            method: 'POST',\n            credentials: \"include\"\n        })\n            .then(response => this.props.history.push(\"/\"))\n        // .then(console.log(\"update logout\"))\n\n    }\n\n    render() {\n        // console.log(this.isLookingForOtherProfile())\n        // this.findProfileByUsername()\n        // console.log('profile:' + this.state.profileUser)\n        // console.log('login' + this.state.username)\n        return (\n            <div className=\"row profile\">\n                <div className=\"col-md-3\">\n                    <div className=\"profile-sidebar\">\n                        <div className=\"profile-usertitle\">\n                            <div className=\"profile-usertitle-name\">\n                                {this.state.profileUser}\n                            </div>\n                            <div className=\"profile-usertitle-job\">\n                                {this.state.type}\n                            </div>\n                        </div>\n\n\n                        <div className=\"profile-userbuttons\">\n                            <button type=\"button\" className=\"btn btn-success btn-sm\">Follow\n                            </button>\n                            <button type=\"button\" className=\"btn btn-danger btn-sm\">Message\n                            </button>\n                        </div>\n\n\n                        <div className=\"profile-usermenu\">\n                            <ul className=\"list-group\">\n                                <li className={`list-group-item ${this.state.currentTab\n                                                                  === 'OVERVIEW'\n                                                                  ? 'profile-usermenu-active'\n                                                                  : ''}`}>\n                                    <a onClick={() => this.setState({currentTab: 'OVERVIEW'})}>\n                                        <i className=\"fa fa-home\"/>\n                                        Overview\n                                    </a>\n                                </li>\n                                {!this.isLookingForOtherProfile() &&\n                                 <li className={`list-group-item ${this.state.currentTab\n                                                                   === 'SETTINGS'\n                                                                   ? 'profile-usermenu-active'\n                                                                   : ''}`}>\n                                     <a onClick={() => this.setState({currentTab: 'SETTINGS'})}>\n                                         <i className=\"fa fa-user\"/>\n                                         Account Setting\n                                     </a>\n                                 </li>}\n                                <li className={`list-group-item ${this.state.currentTab\n                                                                  === 'WISH_LIST'\n                                                                  ? 'profile-usermenu-active'\n                                                                  : ''}`}>\n                                    <a onClick={() => this.setState({currentTab: 'WISH_LIST'})}>\n                                        <i className=\"fa fa-calendar-check-o\"/>\n                                        Wish List\n                                    </a>\n                                </li>\n                                <li className=\"list-group-item\">\n                                    <Link to={'/'}>\n                                        <i className=\"fa fa-backward\"/>\n                                        Back\n                                    </Link>\n                                </li>\n                                {!this.isLookingForOtherProfile() &&\n                                 <li className=\"list-group-item\">\n                                     <a onClick={this.logout}>\n                                         <i className=\"fa fa-backward\"/>\n                                         Logout\n                                     </a>\n                                 </li>}\n\n                            </ul>\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"col-md-9\">\n                    <div className=\"profile-content\">\n                        {(this.state.currentTab === 'SETTINGS' ||\n                          this.state.currentTab === 'OVERVIEW') &&\n                         <div>\n                             <div className='form-group row'>\n                                 <label className=\"col-md-2 col-form-label\">\n                                     Username:\n                                 </label>\n\n                                 <div className={'col-md-10'}>\n                                     <input value={this.state.profileUser}\n                                            onChange={(e) => this.setState(\n                                                {profileUser: e.target.value})}\n                                            className=\"form-control\"\n                                            title=\"Username\"\n                                            readOnly={true}/>\n                                 </div>\n                             </div>\n\n                             {!this.isLookingForOtherProfile() &&\n                              <div>\n                                  <div className='form-group row'>\n\n                                      <label className=\"col-md-2 col-form-label\">\n                                          Password:\n                                      </label>\n\n                                      <div className={'col-md-10'}>\n                                          <input value={this.state.password}\n                                                 onChange={(e) => this.setState(\n                                                     {password: e.target.value})}\n                                                 className=\"form-control\"\n                                                 title=\"Current Password\"\n                                                 readOnly={this.state.currentTab === 'OVERVIEW'}/>\n                                      </div>\n                                  </div>\n                                  <div className='form-group row'>\n                                      <label className=\"col-md-2 col-form-label\">\n                                          Email:\n                                      </label>\n                                      <div className={'col-md-10'}>\n                                          <input type=\"email\"\n                                                 value={this.state.email || ''}\n                                                 onChange={(e) => this.setState(\n                                                     {email: e.target.value})}\n                                                 className=\"form-control\"\n                                                 title=\"email\"\n                                                 readOnly={this.state.currentTab === 'OVERVIEW'}/>\n                                      </div>\n                                  </div>\n                              </div>}\n                             <div className='form-group row'>\n                                 <label className=\"col-md-2 col-form-label\">\n                                     Date of Birth:\n                                 </label>\n                                 <div className={'col-md-10'}>\n                                     <input\n                                         type=\"date\"\n                                         value={this.state.dob === null ? (new Date())\n                                                                        : this.state.dob}\n                                         onChange={(e) => {\n\n                                             this.setState({dob: e.target.value})\n                                         }}\n                                         className=\"form-control\"\n                                         title=\"dob\"\n                                         readOnly={this.state.currentTab === 'OVERVIEW'}/>\n                                 </div>\n                             </div>\n\n                             <div className='form-group row'>\n                                 <label className=\"col-md-2 col-form-label\">\n                                     Role:\n                                 </label>\n                                 <div className={'col-md-10'}>\n                                     <select className=\"form-control\"\n                                             value={this.state.type === null ? 'EMPLOYEE'\n                                                                             : this.state.type}\n                                             onChange={(e) => this.setState(\n                                                 {type: e.target.value})}\n                                             disabled={this.state.currentTab === 'OVERVIEW'}>\n                                         <option value='EMPLOYEE'>Employee</option>\n                                         <option value='JOB_SEEKER'>Job Seeker</option>\n                                         <option value='ADMIN'>Admin</option>\n                                     </select>\n                                 </div>\n                             </div>\n                             {this.state.currentTab === 'SETTINGS' &&\n                              <button\n                                  onClick={() => this.update()}\n                                  className=\"btn btn-primary float-right\">\n                                  Update\n                              </button>}\n\n                         </div>}\n                        {this.state.currentTab === 'WISH_LIST' &&\n                         <div>\n                             <ul className=\"list-group\">\n                                 {this.state.wishList.map(\n                                     job =>\n                                         <li className=\"list-group-item d-flex justify-content-between align-items-center\"\n                                             key={`${this.state.profileUser}wishList${job.jobId}`}>\n                                             <Link to={`/detail/${job.jobId}`}>{job.jobName}</Link>\n                                             {!this.isLookingForOtherProfile() &&\n                                              <span className=\"badge badge-pill\">\n                                                 <button className='btn'\n                                                         onClick={() => removeFromWishList(\n                                                             job.jobId, this.state.username).then(\n                                                             status => this.setState(prevState => ({\n                                                                 wishList: prevState\n                                                                     .wishList.filter(\n                                                                         j => job !== j)\n                                                             })))}>\n                                                     <i className='fa fa-trash'/>\n                                                 </button>\n                                             </span>}\n                                         </li>)}\n\n                             </ul>\n                         </div>}\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}","import React from 'react';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport HomeComponent from \"./HomeComponent\";\nimport JobListContainer from \"../containers/JobListContainer\";\nimport JobDetailComponent from \"./JobDetailComponent\";\nimport WikiComponent from './WikiComponent'\nimport LoginComponent from \"./LoginComponent\";\nimport RegisterComponent from \"./RegisterComponent\";\nimport ProfileComponent from \"./ProfileComponent\";\n// import UserListComponent from \"./UserListComponet\";\n\nexport default class Jobigger extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <Route path=\"/login\"\n                           exact={true}\n                           component={LoginComponent}/>\n\n                    <Route path=\"/register\"\n                           exact={true}\n                           component={RegisterComponent}/>\n\n                    <Route path=\"/profile\"\n                           exact={true}\n                           component={ProfileComponent}/>\n\n                    <Route path=\"/profile/:username\"\n                           exact={true}\n                           component={ProfileComponent}/>\n\n                    <Route path='/'\n                           exact={true}\n                           component={HomeComponent}/>\n\n\n                    <Route path='/PROTOTYPE'\n                           exact={true}\n                           component={WikiComponent}/>\n\n                    <Route path='/:layout/jobs'\n                           exact={true}\n                           component={JobListContainer}/>\n\n\n                    <Route path='/detail/:id'\n                           exact={true}\n                           component={JobDetailComponent}/>\n\n\n                </div>\n            </BrowserRouter>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Jobigger from \"./components/Jobigger\";\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <Jobigger />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    reviews: []\n}\n\nconst ReviewReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"DELETE_REVIEW\":\n            return {\n                reviews: state.reviews.filter(review => action.reviewId !== review.reviewId)\n            };\n        case \"FIND_REVIEWS_FOR_JOB\":\n            return {\n                ...state,\n                reviews: action.actualReviews\n            };\n        case \"CREATE_REVIEW\":\n            return {\n                reviews: [...state.reviews,\n                          action.newReview]\n            };\n        case \"FIND_REVIEW\":\n            return {\n                ...state,\n                reviews: action.reviews\n            };\n        case \"UPDATE_REVIEW\":\n            return {\n                ...state,\n                reviews: state.reviews.map(\n                    review => review.reviewId === action.updatedReview._id ?\n                              action.updatedReview : review)\n            };\n        default:\n            return state\n    }\n};\n\nexport default ReviewReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {combineReducers, createStore} from \"redux\";\nimport {Provider} from \"react-redux\"\nimport ReviewReducer from \"./reducers/ReviewReducer\";\n\nconst reducers = combineReducers({\n                                     ReviewReducer\n                                 })\nconst store = createStore(reducers)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}